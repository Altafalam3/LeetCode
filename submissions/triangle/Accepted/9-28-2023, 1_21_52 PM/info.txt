{"id":1061210603,"lang":"cpp","lang_name":"C++","time":"22 hours, 2 minutes","timestamp":1695887512,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1061210603/","is_pending":"Not Pending","title":"Triangle","memory":"9.3 MB","code":"class Solution {\npublic:\n    int minimumTotal(vector<vector<int>>& triangle) {\n        int n = triangle.size();\n        vector<vector<int>> dp(n, vector<int>(n, INT_MAX));\n        // we are starting from last row to first row\n        // so that we avoid traversing last row again for min\n\n        for(int i=n-1; i>=0; i--){\n            for(int j=0; j<=i; j++){\n                // base case , last row\n                if(i==n-1){\n                    dp[i][j] = triangle[i][j];\n                }\n\n                else{\n                    int take1 = dp[i + 1][j];\n                    \n                    int take2 = (j <= i) ? dp[i + 1][j + 1] : INT_MAX;\n                    dp[i][j] = min(take1, take2) + triangle[i][j];\n                }\n            }\n        }\n\n        return dp[0][0];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}