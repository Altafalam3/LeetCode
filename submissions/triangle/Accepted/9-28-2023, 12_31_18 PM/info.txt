{"id":1061176547,"lang":"cpp","lang_name":"C++","time":"22 hours, 53 minutes","timestamp":1695884478,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1061176547/","is_pending":"Not Pending","title":"Triangle","memory":"9.3 MB","code":"class Solution {\npublic:\n    int minimumTotal(vector<vector<int>>& triangle) {\n        int n = triangle.size();\n        vector<vector<int>> dp(n, vector<int>(n, INT_MAX));\n\n        for(int i=0; i< n; i++){\n            for(int j=0; j<=i; j++){\n                // base case\n                if(i==0 && j==0){\n                    dp[i][j] = triangle[i][j];\n                }\n\n                else{\n                    int take1 = dp[i - 1][j];\n                    \n                    int take2 = ((j - 1) >= 0) ? dp[i - 1][j - 1] : INT_MAX;\n                    dp[i][j] = min(take1, take2) + triangle[i][j];\n                }\n            }\n        }\n\n        int result = INT_MAX;\n        for (int j = 0; j < n; j++) {\n            result = min(result, dp[n - 1][j]);\n        }\n\n        return result;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle","has_notes":false,"flag_type":1}