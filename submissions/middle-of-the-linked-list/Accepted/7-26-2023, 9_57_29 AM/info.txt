{"id":1004122523,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690345649,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1004122523/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head){\n        ListNode* temp=head;\n        int count=1;\n        while(temp->next!=nullptr){\n            count++;\n            temp=temp->next;\n        }\n        int mid=(count/2)+1;\n        temp=head;\n        while(--mid){\n            temp=temp->next;\n        }\n        return temp;\n    }\n}; ","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}