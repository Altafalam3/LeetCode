{"id":1015576456,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1691493910,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1015576456/","is_pending":"Not Pending","title":"Rotate List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head || k==0) return head;\n\n        int count=1;\n\n        ListNode* temp=head;\n\n        while(temp->next!=nullptr){\n\n            count++;\n\n            temp=temp->next;\n\n        }\n        temp->next=head;\n        head=temp;\n\n        int check= count- (k%count);\n        \n        ListNode *newHead=nullptr;\n\n        while(check>0){\n            head=head->next;\n            check--;\n        }\n        newHead=head->next;\n        head->next=nullptr;\n        return newHead;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}