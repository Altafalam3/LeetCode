{"id":1048182149,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1694590440,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1048182149/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"10.1 MB","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\n        int n = grid.size();\n        int m = grid[0].size();\n\n        vector<vector<int>> dp (n, vector<int>(m,-1));\n\n        // base cases filling\n        dp[0][0] = grid[0][0];\n\n        for(int i=1; i< n; i++){\n            dp[i][0]=grid[i][0] + dp[i-1][0];\n        }\n\n        for(int j=1; j< m; j++){\n            dp[0][j]=grid[0][j] + dp[0][j-1];\n        }\n\n        for(int i=1; i<n; i++){\n            for(int j=1; j<m; j++){\n                int down = grid[i][j] + dp[i-1][j];\n                int right= grid[i][j] + dp[i][j-1];\n                dp[i][j] = min(down,right); \n            }\n        }\n\n        return dp[n-1][m-1];\n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}