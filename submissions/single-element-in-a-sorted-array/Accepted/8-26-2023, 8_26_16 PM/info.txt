{"id":1032332832,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1693061776,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1032332832/","is_pending":"Not Pending","title":"Single Element in a Sorted Array","memory":"22.3 MB","code":"class Solution {\npublic:\n    int singleNonDuplicate(vector<int>& nums) {\n        if(nums.size()==1) return nums[0];\n\n        int low = 0, high = nums.size()-1;\n\n        while(low<=high){\n            int mid = low + (high-low)/2;\n\n            if (mid == 0 || mid == nums.size() - 1) {\n                return nums[mid];\n            }\n\n            if(nums[mid-1] != nums[mid] && nums[mid] != nums[mid+1]){\n                return nums[mid];\n                break;\n            }\n\n            if(mid%2 == 0){\n                if(nums[mid]==nums[mid+1]){\n                    low = mid+1; \n                }\n                else{\n                    high = mid-1;\n                }\n            }\n            else{\n                if(nums[mid-1]==nums[mid]){\n                    low = mid+1; \n                }\n                else{\n                    high = mid-1;\n                }\n            }\n\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111","title_slug":"single-element-in-a-sorted-array","has_notes":false,"flag_type":1}