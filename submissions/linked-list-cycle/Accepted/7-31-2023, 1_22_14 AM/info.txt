{"id":1007986082,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690746734,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1007986082/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head==nullptr || head->next==nullptr) return false;\n\n\n\n      ListNode* slow=head, *fast=head;\n\n\n\n      while(fast!=nullptr && fast->next!=nullptr){\n\n          slow=slow->next;\n\n          fast=fast->next->next;\n\n          if(slow==fast){\n\n            return true;\n\n          }\n\n       \n\n      }\n\n      return false;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}