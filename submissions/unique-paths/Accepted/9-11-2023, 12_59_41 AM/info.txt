{"id":1045946027,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1694374181,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1045946027/","is_pending":"Not Pending","title":"Unique Paths","memory":"6.5 MB","code":"class Solution {\npublic:\n    int uniquePaths(int m, int n) {\n        vector<vector<int>> dp(m, vector<int>(n, 0));\n        \n        // Initialize the first row and first column to 1, as there is only one way to reach any cell in these rows/columns.\n        for (int i = 0; i < m; i++) {\n            dp[i][0] = 1;\n        }\n        for (int j = 0; j < n; j++) {\n            dp[0][j] = 1;\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\n            }\n        }\n\n        return dp[m-1][n-1];\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}