{"id":1045942045,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1694373820,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1045942045/","is_pending":"Not Pending","title":"Unique Paths","memory":"6.5 MB","code":"class Solution {\nprivate:\n    int uniquepaths(int m, int n, int i, int j, vector<vector<int>>& dp) {\n        if (i == m - 1 && j == n - 1) {\n            return 1; // Reached the destination.\n        }\n        if (i >= m || j >= n) {\n            return 0; // Out of bounds.\n        }\n        if (dp[i][j] != -1) {\n            return dp[i][j]; // Return memoized result.\n        }\n\n        int right = uniquepaths(m, n, i, j + 1, dp);\n        int down = uniquepaths(m, n, i + 1, j, dp);\n\n        // Store the result in the memoization table.\n        dp[i][j] = right + down;\n        return dp[i][j];\n    }\n\npublic:\n    int uniquePaths(int m, int n) {\n        vector<vector<int>> dp(m, vector<int>(n, -1)); // Initialize memoization table.\n        return uniquepaths(m, n, 0, 0, dp);\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"unique-paths","has_notes":false,"flag_type":1}