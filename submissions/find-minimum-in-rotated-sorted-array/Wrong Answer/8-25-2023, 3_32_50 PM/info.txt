{"id":1031299065,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1692957770,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1031299065/","is_pending":"Not Pending","title":"Find Minimum in Rotated Sorted Array","memory":"N/A","code":"class Solution {\npublic:\n    int findMin(vector<int>& nums) {\n        int low = 0, high = nums.size()-1;\n        int ans = INT_MAX;\n        while(low <= high){\n            int mid = low + (high-low)/2;\n\n            //left side is sorted so 1st element low will be smallest\n            if(nums[low] <= nums[mid]){\n                ans = min(nums[low],ans);\n                low = mid+1;\n            }\n            // mid will be smallest\n            else{\n                ans = min(nums[mid],ans);\n                high = low-1;\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111011111010111110110111100111110110111101111110110101110111111111111111101111111111111111000000000000000000001000000000000001000001000000100","title_slug":"find-minimum-in-rotated-sorted-array","has_notes":false,"flag_type":1}