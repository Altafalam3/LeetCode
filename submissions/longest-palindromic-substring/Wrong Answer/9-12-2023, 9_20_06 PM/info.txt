{"id":1047590389,"lang":"cpp","lang_name":"C++","time":"2 weeks, 2 days","timestamp":1694533806,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1047590389/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        int n = s.size();\n        string longest = \"\";\n\n        generateSubstrings(s, 0, \"\", longest);\n\n        return longest;\n    }\n\nprivate:\n    void generateSubstrings(string& s, int index, string current, string& longest) {\n        if (index == s.size()) {\n            if (isPalindrome(current) && current.size() > longest.size()) {\n                longest = current;\n            }\n            return;\n        }\n\n        // Include the current character in the substring\n        generateSubstrings(s, index + 1, current + s[index], longest);\n\n        // Exclude the current character from the substring\n        generateSubstrings(s, index + 1, current, longest);\n    }\n\n    bool isPalindrome(string s) {\n        int left = 0, right = s.size() - 1;\n        while (left < right) {\n            if (s[left] != s[right]) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n};\n","compare_result":"111111111111111101100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}