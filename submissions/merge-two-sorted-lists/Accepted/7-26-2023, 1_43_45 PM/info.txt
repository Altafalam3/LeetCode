{"id":1004275061,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690359225,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/1004275061/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (!list1) return list2; \n        if (!list2) return list1; \n\n        ListNode* head;\n        if (list1->val <= list2->val) {\n            head = list1;\n            list1 = list1->next;\n        } else {\n            head = list2;\n            list2 = list2->next;\n        }\n\n        ListNode* current = head;\n\n        while (list1 && list2) {\n            if (list1->val <= list2->val) {\n                current->next = list1;\n                list1 = list1->next;\n            } else {\n                current->next = list2;\n                list2 = list2->next;\n            }\n            current = current->next;\n        }\n\n       \n        if (list1) {\n            current->next = list1;\n        } else {\n            current->next = list2;\n        }\n\n        return head;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}