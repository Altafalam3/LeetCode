{"id":1012844344,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1691237796,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1012844344/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.6 MB","code":"class Solution {\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        int count = 0;\n        for (ListNode* temp = head; temp != nullptr; temp = temp->next) {\n            count++;\n        }\n\n        if (count < k) return head;\n\n        ListNode* prevGroupTail = nullptr;\n        ListNode* newHead = nullptr;\n        \n        while (count >= k) {\n            ListNode* prev = nullptr;\n            ListNode* curr = head;\n            ListNode* next = nullptr;\n            int ktemp = k;\n\n            while (ktemp > 0) {\n                next = curr->next;\n                curr->next = prev;\n                prev = curr;\n                curr = next;\n                ktemp--;\n            }\n\n            if (prevGroupTail != nullptr) {\n                prevGroupTail->next = prev;\n            } else {\n                newHead = prev;\n            }\n\n            prevGroupTail = head;\n            head = curr;\n            count -= k;\n        }\n        \n        if (prevGroupTail != nullptr) {\n            prevGroupTail->next = head;\n        } else {\n            newHead = head;\n        }\n\n        return newHead;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}