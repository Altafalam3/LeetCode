{"id":905353437,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1677420681,"status":10,"status_display":"Accepted","runtime":"65 ms","url":"/submissions/detail/905353437/","is_pending":"Not Pending","title":"Find the Divisibility Array of a String","memory":"26.5 MB","code":"class Solution {\npublic:\n    vector<int> divisibilityArray(string word, int m) {\n        vector<int>ans;\n        long long prevRem = 0;\n        for (int i = 0; i < word.size(); i++)\n        {\n            int currDig = word[i] - '0';\n\t\t\t//newDividend = currDig appended to previous remainder\n            long long newDividend = (prevRem * 10) + currDig;  \n            \n            int rem = (newDividend % m);\n            if (rem == 0) ans.push_back(1);\n            else ans.push_back(0);\n            \n            prevRem = rem; \n        }\n        return ans;   \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"find-the-divisibility-array-of-a-string","has_notes":false,"flag_type":1}