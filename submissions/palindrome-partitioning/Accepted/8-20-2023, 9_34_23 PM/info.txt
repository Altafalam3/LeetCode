{"id":1026862499,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1692547463,"status":10,"status_display":"Accepted","runtime":"96 ms","url":"/submissions/detail/1026862499/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.6 MB","code":"class Solution {\npublic:\n    int isPalindrome(string st,int l, int r){\n        while (l < r) {\n            if(st[l]!=st[r]){\n                return false;\n            }\n            l++;\n            r--;\n        }\n        return true;\n    }\n\n    void palindromePartition(int ind,const string s, vector<string>& currentPath, vector<vector<string>>& result){\n        if(ind == s.size()){\n            result.push_back(currentPath);\n            return;\n        }\n\n        for(int i=ind;i<s.size();i++){\n            if(isPalindrome(s,ind,i)){\n                currentPath.push_back(s.substr(ind, i-ind+1));\n                palindromePartition(i+1, s, currentPath, result);\n                currentPath.pop_back();\n            }\n        }      \n    }\n\n    vector<vector<string>> partition(string s) {\n        vector<string>currentPath;\n        vector<vector<string>> result;\n        palindromePartition(0, s, currentPath, result);\n        return result;\n    }\n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}