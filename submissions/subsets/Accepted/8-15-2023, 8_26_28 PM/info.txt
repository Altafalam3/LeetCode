{"id":1022159593,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1692111388,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1022159593/","is_pending":"Not Pending","title":"Subsets","memory":"7 MB","code":"class Solution {\npublic:\n    void generateSubsets(vector<int> &nums,int ind, vector<int> &currentSubset, vector<vector<int>> &result){\n        // base condition to stop when at most all are covered\n        // push the subset to result \n        if(ind==nums.size()){\n            result.push_back(currentSubset);\n            return;\n        }\n        \n        // take it (element)\n        currentSubset.push_back(nums[ind]);\n        generateSubsets(nums,ind+1,currentSubset,result);\n        \n        //dont take it (element)\n        currentSubset.pop_back();\n        generateSubsets(nums,ind+1,currentSubset,result);\n        \n    }\n    \n    vector<vector<int>> subsets(vector<int>& nums) {    \n        vector<vector<int>> result;\n        vector<int> currentSubset;\n        \n        generateSubsets(nums, 0, currentSubset, result);\n        \n        return result;\n    }\n};","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}