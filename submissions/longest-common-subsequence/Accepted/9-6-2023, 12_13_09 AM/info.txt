{"id":1041500467,"lang":"cpp","lang_name":"C++","time":"3 weeks, 2 days","timestamp":1693939389,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/1041500467/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"24.5 MB","code":"class Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n=text1.size(), m=text2.size();\n        vector <vector<int>> dp(n,vector<int>(m, -1));\n\n        return longest(text1, text2, 0, 0, dp);\n    }\n\nprivate:\n    int longest(string &text1, string &text2, int i, int j, vector<vector<int>>& dp){\n        if(i==text1.size() || j==text2.size()){\n            return 0;\n        }\n        if(dp[i][j] != -1) return dp[i][j];\n\n        if(text1[i]==text2[j]){\n            return dp[i][j] = 1 + longest(text1, text2, i+1, j+1, dp);\n        }\n        else{\n            int firstShift = longest(text1, text2, i+1, j, dp);\n            int secondShift = longest(text1, text2, i, j+1, dp);\n            return dp[i][j] = max(firstShift,secondShift);\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}