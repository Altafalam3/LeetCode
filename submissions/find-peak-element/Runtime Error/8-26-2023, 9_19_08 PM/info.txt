{"id":1032372933,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1693064948,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1032372933/","is_pending":"Not Pending","title":"Find Peak Element","memory":"N/A","code":"class Solution {\npublic:\n    int findPeakElement(vector<int>& nums) {\n        int low = 0, high = nums.size() - 1;\n\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n\n            if (nums[mid] > nums[mid + 1]) {\n                // If the current element is greater than the next one,\n                // it's a possible candidate for a peak element.\n                high = mid-1;\n            } else {\n                // Otherwise, we move towards the increasing side\n                // since the peak should be on the right side.\n                low = mid + 1;\n            }\n        }\n\n        // At this point, low and high are equal, and it's the index of the peak.\n        return low;\n    }\n};\n","compare_result":"110000000000000000000000000000000000000000000000000000000000000000","title_slug":"find-peak-element","has_notes":false,"flag_type":1}