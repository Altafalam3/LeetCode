{"id":1010148895,"lang":"cpp","lang_name":"C++","time":"1Â month, 3Â weeks","timestamp":1690969867,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1010148895/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n      if(head==nullptr || head->next==nullptr){\n           return head;\n        }\n        ListNode* oddPtr = head;\n\n        ListNode* evenPtr = head->next;\n\n        ListNode* evenHead = evenPtr;\n\n        while (evenPtr && evenPtr->next) {\n\n            oddPtr->next = evenPtr->next;\n\n            oddPtr = oddPtr->next;\n\n            evenPtr->next = oddPtr->next;\n\n            evenPtr = evenPtr->next;\n\n        }\n\n        oddPtr->next = evenHead;\n\n        return head;\n\n    \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}