{"id":1046216493,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1694407968,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046216493/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        int i=0,j=0;\n\n        vector<int> prev(n, 0), curr(n);\n\n        // Initialize the curr 1st cell\n        curr[0] = (obstacleGrid[0][0] == 0) ? 1 : 0;\n\n        // left most cell initialize \n        prev[0] = (obstacleGrid[0][0] == 0) ? 1 : 0;\n\n        // Initialize the first column based on the value of prev[0]\n        for (int i = 1; i < n; i++) {\n            if (obstacleGrid[0][i] == 0){\n                // compare with above rows value\n                prev[i] = prev[i-1];\n            }\n        }\n\n\n        for(int i=1; i<m; i++){\n            for(int j=1; j<n; j++){\n                if(obstacleGrid[i][j]==0){\n                    curr[j] = prev[j] + curr[j-1];\n                }\n            }\n            prev=curr;\n        }\n\n        return prev[n-1];\n\n    }\n\n};","compare_result":"11111111110111101000000100100000000000000","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}