{"id":1046203142,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1694406583,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046203142/","is_pending":"Not Pending","title":"Unique Paths II","memory":"N/A","code":"class Solution {\npublic:\n    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {\n        int m = obstacleGrid.size();\n        int n = obstacleGrid[0].size();\n        int i=0,j=0;\n\n        vector<vector<int>> dp(m, vector<int>(n, 0));\n\n        // base case first row first cols =1 , exception when it has a obstacle\n        for(int j=0; j<n; j++){\n            if(obstacleGrid[0][j]==0){\n                dp[0][j] = 1;\n            }\n        }\n\n        for(int i=0; i<m; i++){\n            if(obstacleGrid[i][0]==0){\n                dp[i][0] = 1;\n            }\n        }\n\n        for(int i=1; i<m; i++){\n            for(int j=1; j<n; j++){\n                if(obstacleGrid[i][j]==0){\n                    dp[i][j] = dp[i-1][j] + dp[i][j-1];\n                }\n            }\n        }\n\n        return dp[m-1][n-1];\n\n    }\n\n};","compare_result":"11111110111011110101011110000000000000000","title_slug":"unique-paths-ii","has_notes":false,"flag_type":1}