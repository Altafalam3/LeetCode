{"id":1042374265,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1694023886,"status":10,"status_display":"Accepted","runtime":"112 ms","url":"/submissions/detail/1042374265/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"6.7 MB","code":"class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        string reversed_s(s.rbegin(), s.rend());\n        return longestCommonSubsequence(s, reversed_s);\n    }\n\nprivate:\n    int longestCommonSubsequence(string text1, string text2) {\n        int n=text1.size(), m=text2.size();\n        vector<int> prev(m+1,0) , curr(m+1);\n\n        for(int i=1; i<=n; i++){\n            for(int j=1; j<=m; j++){\n                if(text1[i-1]==text2[j-1]){\n                    curr[j] = 1 + prev[j-1];\n                }\n                else{\n                    curr[j] = max(prev[j],curr[j-1]);\n                }        \n            }\n            prev = curr;\n        }\n\n        return prev[m];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}