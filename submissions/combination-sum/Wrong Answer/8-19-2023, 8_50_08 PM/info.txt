{"id":1025852445,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1692458408,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1025852445/","is_pending":"Not Pending","title":"Combination Sum","memory":"N/A","code":"class Solution {\npublic:\n    void generateCombinations(const vector<int>& candidates, int ind, int sum, vector<int>& currentCombination, vector<vector<int>>& result, int target) {\n        if(sum<target) return;\n        if (sum == target) {\n            result.push_back(currentCombination);\n            return;\n        }\n        \n        for (int i = ind; i < candidates.size(); i++) {\n            if (sum + candidates[i] <= target) {\n                currentCombination.push_back(candidates[i]);\n                generateCombinations(candidates, i, sum + candidates[i], currentCombination, result, target);\n                currentCombination.pop_back();\n            }\n        }\n    }\n    \n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<vector<int>> result;\n        vector<int> currentCombination;\n        \n        generateCombinations(candidates, 0, 0, currentCombination, result, target);\n        \n        return result;\n    }\n};\n","compare_result":"0010000000000000010001000000000010000000000000110100000110010000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000","title_slug":"combination-sum","has_notes":false,"flag_type":1}