{"id":1025870154,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1692459058,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1025870154/","is_pending":"Not Pending","title":"Combination Sum","memory":"10.9 MB","code":"class Solution {\npublic:\n    void generateCombinations(vector<int>& candidates, int ind, int sum, vector<int>& currentCombination, vector<vector<int>>& result, int target) {\n        if (sum>target) return;\n        if (ind==candidates.size()) {\n            if (sum == target) {\n            result.push_back(currentCombination);\n            }\n            return;\n        }\n        \n        if (sum + candidates[ind] <= target) {\n            currentCombination.push_back(candidates[ind]);\n\n            generateCombinations(candidates, ind, sum + candidates[ind], currentCombination, result, target);\n\n            currentCombination.pop_back();\n        }\n        generateCombinations(candidates, ind+1, sum, currentCombination, result, target);\n    }\n    \n    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {\n        vector<vector<int>> result;\n        vector<int> currentCombination;\n        \n        generateCombinations(candidates, 0, 0, currentCombination, result, target);\n        \n        return result;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}