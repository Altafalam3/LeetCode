{"id":1020071582,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691919761,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1020071582/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.9 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        int n=matrix.size();\n        int m=matrix[0].size();\n        \n        int left=0,right=m-1;\n        int bottom=n-1,top=0;\n        \n        vector<int> ans;\n        while(left<=right && top<=bottom)\n        {\n            for(int i=left;i<=right;i++) \n            {\n                ans.push_back(matrix[top][i]);\n            }\n            top++;\n            \n            for(int i=top;i<=bottom;i++) \n            {\n                ans.push_back(matrix[i][right]);\n            }\n            right--;\n\n            if(top<=bottom)\n            {\n                for(int i=right;i>=left;i--){                    \n                    ans.push_back(matrix[bottom][i]);       \n                }\n                bottom--;\n            }\n            \n            if(left<=right)\n            {\n                for(int i=bottom;i>=top;i--){\n                    ans.push_back(matrix[i][left]);\n                }\n                left++;\n            }\n        }\n        return ans;\n\n    }\n};","compare_result":"1111111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}