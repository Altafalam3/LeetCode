{"id":1004142708,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1690347573,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1004142708/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n      if (head == nullptr || head->next == nullptr){\n            return head;\n\n        }\n        ListNode* slow=head,*fast=head,*slowprev=nullptr;\n        \n        while(fast!=nullptr && fast->next!=nullptr){\n            slowprev=slow;\n            slow=slow->next;\n            fast=fast->next->next;\n        }\n        ListNode *nextt=slow->next;\n      delete slow;\n      \n            slowprev->next=nextt;\n      \n        return head;\n    }\n};","compare_result":"1110011111011111011111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}